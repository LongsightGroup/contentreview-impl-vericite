Index: .
===================================================================
--- .	(revision 308305)
+++ .	(working copy)

Property changes on: .
___________________________________________________________________
Modified: svn:mergeinfo
   Reverse-merged /assignment/trunk:r124121,130216,130486,130977,131297,132079,132648,133937,134317,202613,307145
Index: assignment-api/api/src/java/org/sakaiproject/assignment/api/AssignmentSubmissionEdit.java
===================================================================
--- assignment-api/api/src/java/org/sakaiproject/assignment/api/AssignmentSubmissionEdit.java	(revision 308305)
+++ assignment-api/api/src/java/org/sakaiproject/assignment/api/AssignmentSubmissionEdit.java	(working copy)
@@ -241,5 +241,5 @@
 	 * Post attachments to the content review service
 	 * @param attachments
 	 */
-	public void postAttachment(List attachments);
+	public void postAssignmentToContentReviewService(String inlineText, List attachments);
 }
Index: assignment-bundles/resources/assignment.properties
===================================================================
--- assignment-bundles/resources/assignment.properties	(revision 308305)
+++ assignment-bundles/resources/assignment.properties	(working copy)
@@ -307,7 +307,7 @@
 
 plespethe3 = Please specify the maximum points.
 
-plesuse0 = ''{0}'' is invalid. Please use correct grade string.
+plesuse0 = Please use correct grade string.
 
 plesuse1 = Please use a number for the grade field.
 
@@ -587,9 +587,9 @@
 confirm.submission.email.noEmailAddress=No email confirmation containing this information could be sent to you due to missing email address.
 confirm.submission.button=OK
 receive.confirm.submission.email.options=Submission Notification Email Options:
-receive.confirm.submission.email.each=Send a notification email for each student submission
-receive.confirm.submission.email.digest=Send one email per day summarizing notifications for student submissions
-receive.confirm.submission.email.none=Do not send notification emails for any student submissions
+receive.confirm.submission.email.each=Send me a notification email for each student submission
+receive.confirm.submission.email.digest=Send me one email per day summarizing notifications for student submissions
+receive.confirm.submission.email.none=Do not send me notification emails for any student submissions
 
 # on the download/upload all page, most of the attributes are shared between upload and download process
 uploadall.title = Upload All
@@ -615,10 +615,11 @@
 uploadall.alert.wrongZipFormat=ZIP file is not in correct format. Please ensure that ZIP file contains student folders or grades.csv file at the root level.
 downloadall.alert.choose.element=You must choose at lease one element in the download options.
 uploadall.alert.zipFile=You have not selected a zip archive file. You must select either a .zip or a .sit archive file as the upload file.
+uploadall.size = The upload size limit of {0} MB has been exceeded.
 
 review.use = Use {0}
 review.allow = Allow students to view report
-review.report = Turnitin Report
+review.report = Report
 review.submit.papers.repository=Submit papers to the following repository:
 review.submit.papers.repository.none=None
 review.submit.papers.repository.standard=Standard Paper Repository
@@ -636,7 +637,9 @@
 gen.rev = TurnItIn
 review.notavail = Not available yet
 review.viewreport = View Report
-review.title = {0} Service
+review.title = {0}
+review.acceptInlineAndAllAttachments=Inline text and all attachments will be submitted
+review.not.acceptInlineAndAllAttachments=Only the first attachment will be submitted
 review.noreport = no report
 
 ## notification email content
@@ -716,7 +719,7 @@
 singleatt = Single Uploaded File only
 att.upl = Choose File: 
 processmessage.file = Uploading file(s)
-size.exceeded = The upload size limit of {0} MB has been exceeded. 
+size.exceeded = The upload size limit of {0} has been exceeded. 
 notpermis4 = You do not have proper permissions to add resources.
 alert.toolong = The name ''{0}'' is too long.
 failed = Operation could not be completed at this time.
Index: assignment-bundles/resources/assignment_en_GB.properties
===================================================================
--- assignment-bundles/resources/assignment_en_GB.properties	(revision 308305)
+++ assignment-bundles/resources/assignment_en_GB.properties	(working copy)
@@ -57,4 +57,3 @@
 non.submission.grade=Assign this mark to all participants without submissions\:
 ungra=Not marked
 gen.gra=Mark
-receive.confirm.submission.email.digest=Send one email per day summarising notifications for student submissions
\ No newline at end of file
Index: assignment-bundles/resources/assignment_ja.properties
===================================================================
--- assignment-bundles/resources/assignment_ja.properties	(revision 308305)
+++ assignment-bundles/resources/assignment_ja.properties	(working copy)
@@ -75,7 +75,7 @@
 plesuse2=\u6210\u7E3E\u30D5\u30A3\u30FC\u30EB\u30C9\u306B\u306F\u5C0F\u6570\u70B9\u7B2C1\u4F4D\u306E\u307F\u7528\u3044\u3066\u304F\u3060\u3055\u3044\uFF0E
 plesuse1=\u6210\u7E3E\u30D5\u30A3\u30FC\u30EB\u30C9\u306B\u306F\u6570\u5024\u3092\u7528\u3044\u3066\u304F\u3060\u3055\u3044\uFF0E
 saved_grading=\u30B3\u30E1\u30F3\u30C8\u307E\u305F\u306F\u6210\u7E3E\u304C\u4FDD\u5B58\u3055\u308C\u307E\u3057\u305F\uFF0E
-plesuse0=\u300c{0}\u300d\u306f\u7121\u52b9\u3067\u3059\uff0e\u6b63\u3057\u3044\u6210\u7e3e\u6587\u5b57\u3092\u4f7f\u7528\u3057\u3066\u4e0b\u3055\u3044\uff0e
+plesuse0=\u6B63\u3057\u3044\u6210\u7E3E\u6587\u5B57\u3092\u4F7F\u7528\u3057\u3066\u304F\u3060\u3055\u3044\uFF0E
 inlinatt=\u30A4\u30F3\u30E9\u30A4\u30F3\u3068\u6DFB\u4ED8
 gen.applygrade=\u9069\u7528
 gen.stuwonsee=\u3053\u306E\u65E5\u6642\u307E\u3067\u5B66\u751F\u306B\u8AB2\u984C\u306F\u8868\u793A\u3055\u308C\u307E\u305B\u3093\uFF0E
Index: assignment-impl/impl/src/java/org/sakaiproject/assignment/impl/BaseAssignmentService.java
===================================================================
--- assignment-impl/impl/src/java/org/sakaiproject/assignment/impl/BaseAssignmentService.java	(revision 308305)
+++ assignment-impl/impl/src/java/org/sakaiproject/assignment/impl/BaseAssignmentService.java	(working copy)
@@ -4737,7 +4737,7 @@
 			// now are we view all sections/groups or just specific one?
 			if (allOrOneGroup.equals(AssignmentConstants.ALL))
 			{
-				if (allowAllGroups(contextString))
+				if (a.getAccess() ==  Assignment.AssignmentAccess.SITE)
 				{
 					// site range
 					try {
@@ -9263,48 +9263,161 @@
 				return -2;
 			}
 
-			if (m_submittedAttachments.isEmpty()) {
+			if (m_submittedAttachments.isEmpty() && 
+					(!contentReviewService.acceptInlineAndAllAttachments() || (contentReviewService.acceptInlineAndAllAttachments() && (this.getSubmittedText() == null || "".equals(this.getSubmittedText().trim()))))) {
 				M_log.debug(this + " getReviewScore No attachments submitted.");
 				return -2;
 			}
 			else
 			{
-				//we may have already retrived this one
-				if (m_reviewScore != null && m_reviewScore > -1) {
-					M_log.debug("returning stored value of " + m_reviewScore);
-					return m_reviewScore.intValue();
-				}
+				if(contentReviewService.acceptInlineAndAllAttachments()){
+					//check inline text first:
+					boolean oneAccepted = false;
+					String userId = (String)this.getSubmitterIds().get(0);
+					//check inline if there is any data:
+					if(this.getSubmittedText() != null && !"".equals(this.getSubmittedText().trim())){
+						try{
+							Long status = contentReviewService.getReviewStatus(contentReviewService.getInlineTextId(getAssignment().getReference(), userId, this.getTimeSubmitted().getTime()));
+							if (status != null && (status.equals(ContentReviewItem.NOT_SUBMITTED_CODE) || status.equals(ContentReviewItem.SUBMITTED_AWAITING_REPORT_CODE)))  {
+								M_log.debug(this + " getReviewStatus returned a status of: " + status);
+							}else{
+								oneAccepted = true;
+							}
+						}catch (QueueException cie) {
+							//inline text can't be found, try to resubmit it:
+							try {
+								contentReviewService.queueInlineText(userId, this.getContext(), getAssignment().getReference(), this.getSubmittedText(), this.getTimeSubmitted().getTime());
+							} catch (Exception e) {
+								M_log.error(e.getMessage(), e);
+							}
+						}
+					}
 
-				ContentResource cr = getFirstAcceptableAttachement();
-				if (cr == null )
-				{
-					M_log.debug(this + " getReviewScore No suitable attachments found in list");
-					return -2;
-				}
+					for( int i =0; i < m_submittedAttachments.size();i++ ) {
+						if(oneAccepted){
+							break;
+						}
+						Reference ref = (Reference)m_submittedAttachments.get(i);
+						ContentResource contentResource = (ContentResource)ref.getEntity();
+						try{
+							if(contentReviewService.isAcceptableContent(contentResource)){
+								Long status = contentReviewService.getReviewStatus(contentResource.getId());
+								if (status != null && (status.equals(ContentReviewItem.NOT_SUBMITTED_CODE) || status.equals(ContentReviewItem.SUBMITTED_AWAITING_REPORT_CODE)))  {
+									M_log.debug(this + " getReviewStatus returned a status of: " + status);
+								}else{
+									oneAccepted = true;
+								}
+							}
+						}catch (QueueException cie) {
+							//try to resubmit attachment
+							try {
+								contentReviewService.queueContent(userId, this.getContext(), getAssignment().getReference(), contentResource.getId());
+							} catch (QueueException e) {
+								M_log.error(e.getMessage(), e);
+							}
+						}
+					}
+					if(!oneAccepted){
+						M_log.debug("Couldn't find any accepted materials");
+						return -2;
+					}
 
+					//next get the scores of each content and show the highest score:
+					int highestScore = 0;
+					boolean oneScored = false;
+					boolean anyQueued = false;
+					if(this.getSubmittedText() != null && !"".equals(this.getSubmittedText().trim())){
+						//inline text:
+						try{
+							int score = contentReviewService.getReviewScore(contentReviewService.getInlineTextId(getAssignment().getReference(), userId, getTimeSubmitted().getTime()), getAssignment().getReference(), userId);
+							oneScored = true;
+							if(score > highestScore){
+								highestScore = score;
+							}
+						}catch (QueueException cie) {
+							//inline text can't be found, try to resubmit it:
+							try {
+								contentReviewService.queueInlineText(userId, this.getContext(), getAssignment().getReference(), this.getSubmittedText(), this.getTimeSubmitted().getTime());
+								anyQueued = true;
+							} catch (Exception e) {
+								M_log.error(e.getMessage(), e);
+							}
+						} catch (ReportException e) {
+							M_log.error(e.getMessage(), e);
+						} catch (Exception e) {
+							M_log.error(e.getMessage(), e);
+						}
+					}
+					//now get the attachments:
+					for( int i =0; i < m_submittedAttachments.size();i++ ) {
+						Reference ref = (Reference)m_submittedAttachments.get(i);
+						ContentResource contentResource = (ContentResource)ref.getEntity();
+						if(contentReviewService.isAcceptableContent(contentResource)){
+							try{
+								int score = contentReviewService.getReviewScore(contentResource.getId(), getAssignment().getReference(), userId);
+								oneScored = true;
+								if(score > highestScore){
+									highestScore = score;
+								}
+							}catch (QueueException cie) {
+								//try to resubmit attachment
+								try {
+									contentReviewService.queueContent(userId, this.getContext(), getAssignment().getReference(), contentResource.getId());
+									anyQueued = true;
+								} catch (QueueException e) {
+									M_log.error(e.getMessage(), e);
+								}
+							} catch (ReportException e) {
+								M_log.error(e.getMessage(), e);
+							} catch (Exception e) {
+								M_log.error(e.getMessage(), e);
+							}
+						}
+					}
+					if(!anyQueued && !oneScored){
+						//more likely service is down
+						return -2;
+					}
 
+					return highestScore;
+				}else{
+					//single file upload
+					//we may have already retrived this one
+					if (m_reviewScore != null && m_reviewScore > -1) {
+						M_log.debug("returning stored value of " + m_reviewScore);
+						return m_reviewScore.intValue();
+					}
 
-				try {
-					//we need to find the first attachment the CR will accept
-					String contentId = cr.getId();
-					M_log.debug(this + " getReviewScore checking for score for content: " + contentId);
+					ContentResource cr = getFirstAcceptableAttachement();
+					if (cr == null )
+					{
+						M_log.debug(this + " getReviewScore No suitable attachments found in list");
+						return -2;
+					}
 
-                    Long status = contentReviewService.getReviewStatus(contentId);
-                    if (status != null && (status.equals(ContentReviewItem.NOT_SUBMITTED_CODE) || status.equals(ContentReviewItem.SUBMITTED_AWAITING_REPORT_CODE)))  {
-                        M_log.debug(this + " getReviewStatus returned a status of: " + status);
-                        return -2;
-                    }
 
-					int score = contentReviewService.getReviewScore(contentId);
-					m_reviewScore = score;
-					M_log.debug(this + " getReviewScore CR returned a score of: " + score);
-					return score;
-						
-				} 
-				catch (QueueException cie) {
-					//should we add the item
+
 					try {
-						
+						//we need to find the first attachment the CR will accept
+						String contentId = cr.getId();
+						M_log.debug(this + " getReviewScore checking for score for content: " + contentId);
+
+						Long status = contentReviewService.getReviewStatus(contentId);
+						if (status != null && (status.equals(ContentReviewItem.NOT_SUBMITTED_CODE) || status.equals(ContentReviewItem.SUBMITTED_AWAITING_REPORT_CODE)))  {
+							M_log.debug(this + " getReviewStatus returned a status of: " + status);
+							return -2;
+						}
+
+						int score = contentReviewService.getReviewScore(contentId);
+						m_reviewScore = score;
+						M_log.debug(this + " getReviewScore CR returned a score of: " + score);
+						return score;
+
+					} 
+					catch (QueueException cie) {
+						//should we add the item
+						try {
+
 							M_log.debug(this + " getReviewScore Item is not in queue we will try add it");
 							String contentId = cr.getId();
 							String userId = (String)this.getSubmitterIds().get(0);
@@ -9314,20 +9427,20 @@
 							catch (QueueException qe) {
 								M_log.warn(" getReviewScore Unable to queue content with content review Service: " + qe.getMessage());
 							}
-								
-							
-						
-					} catch (Exception e) {
-						e.printStackTrace();
+
+
+
+						} catch (Exception e) {
+							e.printStackTrace();
+						}
+						return -1;
+
 					}
-					return -1;
-					
-				}
-				catch (Exception e) {
-					M_log.warn(this + " getReviewScore " + e.getMessage());
-					return -1;
-				}
-					
+					catch (Exception e) {
+						M_log.warn(this + " getReviewScore " + e.getMessage());
+						return -1;
+					}
+				}		
 			}
 	
 			
@@ -9335,12 +9448,43 @@
 		
 		public String getReviewReport() {
 //			 Code to get updated report if default
-			if (m_submittedAttachments.isEmpty()) { 
+			if (m_submittedAttachments.isEmpty()
+					&& (!contentReviewService.acceptInlineAndAllAttachments() || (contentReviewService.acceptInlineAndAllAttachments() && (this.getSubmittedText() == null || "".equals(this.getSubmittedText().trim()))))) { 
 				M_log.debug(this.getId() + " getReviewReport No attachments submitted."); 
 				return "Error";
 			}
 			else
 			{
+				if(contentReviewService.acceptInlineAndAllAttachments()){
+					//sent it the first acceptable attachment (or inline text id) so that the
+					//service can look up information based on that
+					String contentId = null;
+					String userId = (String)this.getSubmitterIds().get(0);
+					ContentResource cr = getFirstAcceptableAttachement();
+					if(cr == null && getSubmittedText() != null && !"".equals(getSubmittedText())){
+						contentId = contentReviewService.getInlineTextId(getAssignment().getReference(), userId, this.getTimeSubmitted().getTime());
+					}else if(cr != null){
+						contentId = cr.getId();
+					}
+					if(contentId != null){
+						try{
+							if (allowGradeSubmission(getReference())){
+								return contentReviewService.getReviewReportInstructor(contentId, getAssignment().getReference());
+							}else{
+								return contentReviewService.getReviewReportStudent(contentId, getAssignment().getReference());
+							}
+						} catch (QueueException e) {
+							M_log.debug(e.getMessage(), e);
+							return "Error";
+						} catch (ReportException e) {
+							M_log.debug(e.getMessage(), e);
+							return "Error";
+						}
+					}else{
+						M_log.debug("couldn't find an acceptable content id for getReviewReport");
+						return "Error";
+					}
+				}else{
 				try {
 					ContentResource cr = getFirstAcceptableAttachement();
 					if (cr == null )
@@ -9352,14 +9496,15 @@
 					String contentId = cr.getId();
 					
 					if (allowGradeSubmission(getReference()))
-						return contentReviewService.getReviewReportInstructor(contentId);
+						return contentReviewService.getReviewReportInstructor(contentId, getAssignment().getReference());
 					else
-						return contentReviewService.getReviewReportStudent(contentId);
+						return contentReviewService.getReviewReportStudent(contentId, getAssignment().getReference());
 					
 				} catch (Exception e) {
 					M_log.warn(":getReviewReport() " + e.getMessage());
 					return "Error";
 				}
+				}
 					
 			}
 			
@@ -11147,15 +11292,37 @@
 		
 		
 		
-		public void postAttachment(List attachments){
+		public void postAssignmentToContentReviewService(String inlineText, List attachments){
 			//Send the attachment to the review service
 
 			try {
-				ContentResource cr = getFirstAcceptableAttachement(attachments);
 				Assignment ass = this.getAssignment();
 				if (ass != null)
 				{
-					contentReviewService.queueContent(null, null, ass.getReference(), cr.getId());
+					String userId = (String)this.getSubmitterIds().get(0);
+					if(contentReviewService.acceptInlineAndAllAttachments()){
+						//first submit inline text
+						if(inlineText != null && !"".equals(inlineText.trim())){
+							contentReviewService.queueInlineText(userId, this.getContext(), ass.getReference(), inlineText, this.getTimeSubmitted().getTime());
+						}
+						for( int i =0; i < attachments.size();i++ ) { 
+							Reference attachment = (Reference)attachments.get(i);
+							try {
+								ContentResource res = m_contentHostingService.getResource(attachment.getId());
+								if(contentReviewService.isAcceptableContent(res)){
+									contentReviewService.queueContent(userId, this.getContext(), ass.getReference(), res.getId());
+								}
+							}catch(Exception e){
+								M_log.warn(e.getMessage(), e);
+							}
+						}
+					}else{
+						//single file upload
+						ContentResource cr = getFirstAcceptableAttachement(attachments);
+						if(cr != null){
+							contentReviewService.queueContent(null, null, ass.getReference(), cr.getId());
+						}
+					}
 				}
 				else
 				{
Index: assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
===================================================================
--- assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(revision 308305)
+++ assignment-tool/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java	(working copy)
@@ -52,7 +52,6 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.ConcurrentSkipListSet;
 
 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.logging.Log;
@@ -837,7 +836,12 @@
 		// Check whether content review service is enabled, present and enabled for this site
 		getContentReviewService();
 		context.put("allowReviewService", allowReviewService && contentReviewService != null && contentReviewService.isSiteAcceptable(s));
-
+		if(contentReviewService != null && contentReviewService.acceptInlineAndAllAttachments()){
+			context.put("acceptInlineAndAllAttachments", true);
+		}else{
+			context.put("acceptInlineAndAllAttachments", false);
+		}
+	
 		if (allowReviewService && contentReviewService != null && contentReviewService.isSiteAcceptable(s)) {
 			//put the review service stings in context
 			String reviewServiceName = contentReviewService.getServiceName();
@@ -4133,10 +4137,6 @@
 			if (feedbackCommentString != null)
 			{
 				sEdit.setFeedbackComment(feedbackCommentString);
-			} 
-			else 
-			{
-				sEdit.setFeedbackComment("");
 			}
 
 			// the instructor inline feedback
@@ -4451,8 +4451,8 @@
 							//Post the attachments before clearing so that we don't sumbit duplicate attachments
 							//Check if we need to post the attachments
 							if (a.getContent().getAllowReviewService()) {
-								if (!attachments.isEmpty()) { 
-									sEdit.postAttachment(attachments);
+								if (!attachments.isEmpty() || (contentReviewService.acceptInlineAndAllAttachments() && sEdit.getSubmittedText() != null && !"".equals(sEdit.getSubmittedText().trim()))) { 
+									sEdit.postAssignmentToContentReviewService(sEdit.getSubmittedText(), attachments);
 								}
 							}
 															 
@@ -4506,7 +4506,7 @@
 							{
 	 							// add each attachment
 								if ((!attachments.isEmpty()) && a.getContent().getAllowReviewService()) 
-									edit.postAttachment(attachments);								
+									edit.postAssignmentToContentReviewService(edit.getSubmittedText(), attachments);								
 								
 								// add each attachment
 								Iterator it = attachments.iterator();
@@ -8848,7 +8848,7 @@
 
 		if (state.getAttribute(STUDENT_LIST_SHOW_TABLE) == null)
 		{
-			state.setAttribute(STUDENT_LIST_SHOW_TABLE, new ConcurrentSkipListSet());
+			state.setAttribute(STUDENT_LIST_SHOW_TABLE, new HashSet());
 		}
 
 		if (state.getAttribute(ATTACHMENTS_MODIFIED) == null)
@@ -10964,9 +10964,7 @@
 			}
 			if (invalid)
 			{
-				// -------- SAK-24199 (SAKU-274) by Shoji Kajita
-				addAlert(state, rb.getFormattedMessage("plesuse0", new Object []{grade}));
-				// --------
+				addAlert(state, rb.getString("plesuse0"));
 			}
 		}
 	}
@@ -11715,7 +11713,7 @@
 		if(fileFromUpload == null)
 		{
 			// "The user submitted a file to upload but it was too big!"
-			addAlert(state, rb.getFormattedMessage("size.exceeded", new Object[]{max_file_size_mb}));
+			addAlert(state, rb.getFormattedMessage("uploadall.size", new Object[]{max_file_size_mb}));
 		}
 		else 
 		{	
@@ -11935,10 +11933,6 @@
 							        				if (gradeType == Assignment.SCORE_GRADE_TYPE)
 							        				{
 							        					validPointGrade(state, itemString);
-							        				} // SAK-24199 - Applied patch provided with a few additional modifications.
-							        				else if (gradeType == Assignment.PASS_FAIL_GRADE_TYPE)
-							        				{
-							        					itemString = validatePassFailGradeValue(state, itemString);
 							        				}
 							        				else
 							        				{
@@ -13278,32 +13272,4 @@
 		String lOptions = ServerConfigurationService.getString("assignment.letterGradeOptions", "A+,A,A-,B+,B,B-,C+,C,C-,D+,D,D-,E,F");
 		context.put("letterGradeOptions", StringUtil.split(lOptions, ","));
 	}
-    /**
-     * Validates the ungraded/pass/fail grade values provided in the upload file are valid.
-     * Values must be present in the appropriate language property file.
-     * @param state
-     * @param itemString
-     * @return one of the valid values or the original value entered by the user
-     */
-    private String validatePassFailGradeValue(SessionState state, String itemString)
-    {
-	    // -------- SAK-24199 (SAKU-274) by Shoji Kajita
-		if (itemString.equalsIgnoreCase(rb.getString("pass"))) 
-		{
-			itemString = "Pass";
-		} 
-		else if (itemString.equalsIgnoreCase(rb.getString("fail"))) 
-		{
-			itemString = "Fail";
-		} 
-		else if (itemString.equalsIgnoreCase(rb.getString("ungra")) || itemString.isEmpty()) {
-			itemString = "Ungraded";
-		}
-		else { // Not one of the expected values. Display error message.
-			addAlert(state, rb.getFormattedMessage("plesuse0", new Object []{itemString}));
-		}
-		// --------
-    	
-    	return itemString;
-    }
 }	
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_grading_submission.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_grading_submission.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_grading_submission.vm	(working copy)
@@ -69,7 +69,7 @@
 	#if ($alertMessage)<div class="alertMessage">$tlang.getString("gen.alert") $alertMessage</div><div style="display:block;clear:both"></div>#end
 	
 	## the form
-	<form name="gradeForm" id="gradeForm" action="#toolForm("AssignmentAction")" method="post" onsubmit="return true;" autocomplete="off">
+	<form name="gradeForm" id="gradeForm" action="#toolForm("AssignmentAction")" method="post" onsubmit="return true;">
 		<input type="hidden" name="eventSubmit_doAssignment_form" value="" />
 		<input type="hidden" name="option" id="option" value="" />
 		<input type="hidden" name="view" id="view" value="" />
@@ -188,7 +188,7 @@
 				#if($allowReviewService && $assignment.getContent().AllowReviewService && $assignment.getContent().AllowStudentViewReport)
 					<tr>
 						<th>
-							$tlang.getString("review.report")
+							$reviewServiceName&nbsp;$tlang.getString("review.report")
 						</th>
 							<td>
 							#if (!$submission)
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_list_submissions.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_list_submissions.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_list_submissions.vm	(working copy)
@@ -505,7 +505,7 @@
 					#if ($allowReviewService && $assignment.getContent().AllowReviewService)
 						<th id="reviewService">
 							<a href="#" onclick="location='#toolLinkParam("AssignmentAction" "doSort_grade_submission" "criteria=$!sort_submitReview")'; return false;" onkeypress="location='#toolLinkParam("AssignmentAction" "doSort_grade_submission" "criteria=$!sort_submitReview")'; return false;" title="$tlang.getString("gen.sorbyreview")">
-								$tlang.getString("gen.rev")
+								$reviewServiceName
 								#if ($sortedBy.equals($!sort_submitReview)) 
 									#if ($sortedAsc.equals("true")) 
 										<img id="sort_ascending_review" src = "#imageLink("sakai/sortascending.gif")" border="0" alt="$tlang.getString("gen.sorasc")" /> 
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm	(working copy)
@@ -509,12 +509,29 @@
 						$reviewServiceUse
 					</label>
 				</div>
+				
 				#if ($!value_UseReviewService.equals("true"))
 					<div id="reviewServiceOptions" class="indnt3">
 				#else
 					<div id="reviewServiceOptions" style="display:none" class="indnt3">
 				#end
-				
+					#if($acceptInlineAndAllAttachments)
+						$tlang.getString("review.acceptInlineAndAllAttachments")
+					#else
+						$tlang.getString("review.not.acceptInlineAndAllAttachments")
+					#end
+					<div class="checkbox">
+						#if ($!value_AllowStudentView.equals("true"))
+							<input id="$name_AllowStudentView" name="$name_AllowStudentView" type="checkbox" value="true" checked="checked" />
+						#else
+							<input id="$name_AllowStudentView" name="$name_AllowStudentView" type="checkbox" value="true" />
+						#end
+						<label for="$name_AllowStudentView">
+							$tlang.getString("review.allow") 
+						</label>
+					</div>
+					<br/>
+					#if($reviewServiceName.equals("Turnitin"))
 					$tlang.getString("content_review.note")
 					
 					$tlang.getString("review.submit.papers.repository")
@@ -542,17 +559,6 @@
 						#end
 					</div>
 					<br/>
-					<div class="checkbox">
-						#if ($!value_AllowStudentView.equals("true"))
-							<input id="$name_AllowStudentView" name="$name_AllowStudentView" type="checkbox" value="true" checked="checked" />
-						#else
-							<input id="$name_AllowStudentView" name="$name_AllowStudentView" type="checkbox" value="true" />
-						#end
-						<label for="$name_AllowStudentView">
-							$tlang.getString("review.allow") 
-						</label>
-					</div>
-					<br/>
 					$tlang.getString("review.originality.check")
 					<br/>
 					<div class="indnt1">
@@ -606,6 +612,7 @@
 						#end
 					</div>
 				</div>
+				#end
 			</div>
 		#end
 		#if ($!withGrade && $!withGradebook)
@@ -726,7 +733,7 @@
 								#elseif($!gradebookAssignmentsSelectedDisabled.get($gaId).equals("selected")) 
 									selected="selected"
 								#end>
-									$validator.escapeHtml($!gradebookAssignmentsLabel.get($gaId))
+									$!gradebookAssignmentsLabel.get($gaId)
 							</option>
 						#end
 					</select>
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_uploadAll.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_uploadAll.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_instructor_uploadAll.vm	(working copy)
@@ -149,7 +149,7 @@
 						onclick="javascript:invokeDownloadUrl('$accessPointUrl', '$actionString', '$alertMessage', '$contextString', '$viewString', '$searchString', '$showSubmissionByFilterSearchOnly');" value="$tlang.getString('downloadall.button.download')" />
 			#else
 				<input type="button" name="uploadButton" id="uploadButton"  accesskey="s" class="active"
-						onclick="javascript:showNotif('submitnotif','uploadButton','uploadAllForm');document.getElementById('uploadAllForm').action='#toolLinkParam($action "doDownload_upload_all" "flow=upload&sakai_csrf_token=$validator.escapeUrl($sakai_csrf_token)")'; submitform('uploadAllForm');" value="$tlang.getString('uploadall.button.upload')" />
+						onclick="javascript:showNotif('submitnotif','uploadButton','uploadAllForm');document.getElementById('uploadAllForm').action='#toolLinkParam($action 'doDownload_upload_all' 'flow=upload')'; submitform('uploadAllForm');" value="$tlang.getString('uploadall.button.upload')" />
 			#end	
 					<input type="button" name="cancelButton" id="cancelButton"  accesskey="x"
 						onclick="document.getElementById('uploadAllForm').action='#toolLinkParam($action 'doCancel_download_upload_all' 'flow=cancel')'; submitform('uploadAllForm');" value="$tlang.getString('gen.can')" />
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_grade.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_grade.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_grade.vm	(working copy)
@@ -115,7 +115,7 @@
 				#if($allowReviewService && $assignment.getContent().AllowReviewService && $assignment.getContent().AllowStudentViewReport)
 					<tr>
 						<th>
-							$tlang.getString("review.report")
+							$reviewServiceName&nbsp;$tlang.getString("review.report")
 						</th>
 							<td>
 							#if (!$submission)
Index: assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm
===================================================================
--- assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm	(revision 308305)
+++ assignment-tool/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm	(working copy)
@@ -286,7 +286,7 @@
 				#if($!submitted && $!timeSubmitted && $allowReviewService && $assignment.getContent().AllowReviewService && $assignment.getContent().AllowStudentViewReport)
 					<tr>
 						<th>
-							$tlang.getString("review.report")
+							$reviewServiceName&nbsp;$tlang.getString("review.report")
 						</th>
 							<td>
 							#if ($submission.getReviewReport().equalsIgnoreCase("Error"))
@@ -497,7 +497,7 @@
 				<input type="hidden" name="sakai_csrf_token" value="$sakai_csrf_token" />
 			</form>
 		#else
-	<form name="addSubmissionForm" id="addSubmissionForm" action="#toolForm("AssignmentAction")" method="post" onsubmit="return true;" >
+	<form name="addSubmissionForm" id="addSubmissionForm" action="#toolForm("AssignmentAction")" method="post" onsubmit="return true;" enctype="multipart/form-data">
 		<input type="hidden" name="eventSubmit_doRead_add_submission_form" value="x" />
 		<input type="hidden" name="option" id="option" value="cancel" />
 		<input type="hidden" name="currentAttachment" value="" />
